{
  "_from": "bson-objectid",
  "_id": "bson-objectid@1.3.0",
  "_inBundle": false,
  "_integrity": "sha512-YcB+lRJEEEIcHNLKyhmHujW7OCVE3+xr9IpEhlprBZnXgF3hqeePeexIsAaOtu1SbkgZRlJVUxvYZ3ngUOyIew==",
  "_location": "/bson-objectid",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "bson-objectid",
    "fetchSpec": "latest",
    "name": "bson-objectid",
    "raw": "bson-objectid",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/bson-objectid/-/bson-objectid-1.3.0.tgz",
  "_shasum": "f0f4c7c949fece975f12790510d75d7fe39fb456",
  "_shrinkwrap": null,
  "_spec": "bson-objectid",
  "_where": "/home/lucas/dev/server-awi",
  "author": {
    "name": "William Kapke"
  },
  "bugs": {
    "url": "https://github.com/williamkapke/bson-objectid/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "Construct ObjectIDs without the mongodb driver or bson module",
  "devDependencies": {
    "@types/node": "^8.0.31",
    "mocha": "^5.2.0",
    "should": "^4.1.0",
    "typescript": "^2.5.3"
  },
  "directories": {
    "test": "test"
  },
  "homepage": "https://github.com/williamkapke/bson-objectid",
  "keywords": [
    "ObjectID",
    "bson",
    "createFromHexString",
    "hex",
    "mongo",
    "mongodb"
  ],
  "license": "Apache-2.0",
  "main": "objectid.js",
  "name": "bson-objectid",
  "optionalDependencies": {},
  "readme": "BSON ObjectID &nbsp;[![Build Status](https://travis-ci.org/williamkapke/bson-objectid.svg?branch=master)](https://travis-ci.org/williamkapke/bson-objectid)\n=============\n\nThis module allows you to create and parse `ObjectID`s without a reference to the\n[mongodb](https://github.com/mongodb/node-mongodb-native) or [bson](https://github.com/mongodb/js-bson)\nmodules.\n\nThe goal is to be 100% compatable with all [bson](https://github.com/mongodb/js-bson)'s\npublic API implementation (found here: https://github.com/mongodb/js-bson/blob/master/lib/objectid.js).\n\n## Install\n    $ npm install bson-objectid\n\n## Usage\n```javascript\nvar ObjectID = require(\"bson-objectid\");\n\nconsole.log(ObjectID());\nconsole.log(ObjectID(\"54495ad94c934721ede76d90\"));\nconsole.log(ObjectID(1414093117));//time\nconsole.log(ObjectID([ 84, 73, 90, 217, 76, 147, 71, 33, 237, 231, 109, 144 ]));\nconsole.log(ObjectID(new Buffer([ 84, 73, 90, 217, 76, 147, 71, 33, 237, 231, 109, 144 ])));\n```\n\n### ObjectID()<br>ObjectID(time)<br>ObjectID(hexString)<br>ObjectID(idString)<br>ObjectID(array)<br>ObjectID(buffer)\nCreates a new immutable `ObjectID` instance based on the current system time.\n\nPossible arguments:<br>\n**time** Constructs the instance based on the specified time (in seconds).<br>\n**hexString** Constructs the instance from a 24 character hex string.<br>\n**idString** Constructs the instance from a 12 byte string.<br>\n**array** Constructs the instance from an `Array` of 24 bytes.<br>\n**buffer** Constructs the instance from a 24 byte `Buffer` instance.<br>\n\n#### #id\n**returns** the 12 byte id string.\n\n#### #str\n#### #toHexString()\n**returns** the `ObjectID` represented as a 24 character hex string.\n\n#### #equals(other)\n**returns** true if the `ObjectID`s represent the same underlying value. Otherwise false.\n#### #getTimestamp()\n**returns** the generation `Date` (accurate up to the second) that this `ObjectID` was generated.\n\n### ObjectID.createFromTime(time)\nCreates an ObjectID from a time (in seconds) `Number`, with the rest of the `ObjectID` zeroed out. Used for comparisons or sorting the ObjectID.\n\n### ObjectID.createFromHexString(hexString)\nCreates an ObjectID from a 24 character hex string.\n\n### ObjectID.isValid(hexString)<br>ObjectID.isValid(ObjectID)\nChecks if a value is a valid `ObjectID` or 24 character hex string.\n> THE NATIVE DOCUMENTATION ISN'T CLEAR ON THIS GUY!<br>\n> See: http://mongodb.github.io/node-mongodb-native/api-bson-generated/objectid.html#objectid-isvalid\n\n### ObjectID.generate()<br>ObjectID.generate(time)\nYou can use this to generate a 24 character hex string without instantiating a `ObjectID` instance.\n\nThis diverges from [bson](https://github.com/mongodb/js-bson)'s implementation which returns the 12 byte string.\n\n**returns** a valid 24 character `ObjectID` hex string.\n\n### ObjectID.setMachineID(number)<br>ObjectID.setMachineID(string)\nYou can use this to set a custom machine-id.\nIt should be a 6 character hex string or a 3 byte integer and will truncate all larger values.\n\n### ObjectID.getMachineID()\n**returns** the machine-id as a 3 byte int.\n\n## Test\n    mocha\n\nor\n\n    npm test\n\nLicense\n=======\nApache v2.0\n\nSee LICENSE file.\n\nSpecial callout to [@feross](https://github.com/feross) for the [is-buffer](https://github.com/feross/is-buffer) code\nused internally to avoid Buffer from being loaded in browserify environments.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/williamkapke/bson-objectid.git"
  },
  "scripts": {
    "test": "mocha",
    "typescript-test": "tsc --project typing-tests"
  },
  "typings": "./objectid.d.ts",
  "version": "1.3.0"
}
